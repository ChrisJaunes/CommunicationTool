@startuml

title __MODEL's Class Diagram__\n

  namespace com.chrisjaunes.communication.client {
    namespace contacts {
      namespace model {
        class com.chrisjaunes.communication.client.contacts.model.ContactsConfig {
            {static} + CONTACTS_FRIENDS_AGREE : String
            {static} + CONTACTS_FRIENDS_AGREE_CODE : int
            {static} + CONTACTS_FRIENDS_NULL_CODE : int
            {static} + CONTACTS_FRIENDS_REJECT : String
            {static} + CONTACTS_FRIENDS_REQUEST_CODE : int
            {static} + CONTACTS_FRIEND_REQUEST : String
            {static} + STATUS_QUERY_SUCCESSFUL : String
            {static} + STATUS_UPDATE_SUCCESSFUL : String
            {static} + STR_CONTACTS_ACCOUNT : String
            {static} + STR_OPERATION : String
            {static} + STR_TIME : String
            {static} + URL_CONTACTS_QUERY : String
            {static} + URL_CONTACTS_UPDATE : String
        }
      }
    }
  }
  

  namespace com.chrisjaunes.communication.client {
    namespace contacts {
      namespace model {
        interface com.chrisjaunes.communication.client.contacts.model.ContactsDao {
            {abstract} + InsertContacts()
            {abstract} + UpdateContacts()
            {abstract} + isNowContactsExist()
            {abstract} + queryContactsByAccountID()
            {abstract} + queryNewContactsList()
            {abstract} + queryNowContactsList()
        }
      }
    }
  }
  

  namespace com.chrisjaunes.communication.client {
    namespace contacts {
      namespace model {
        class com.chrisjaunes.communication.client.contacts.model.ContactsRaw {
            - account : String
            - avatar : String
            - nickname : String
            - operation : int
            - textStyle : String
            - time : String
            + ContactsRaw()
            + getAccount()
            + getAvatar()
            + getNickname()
            + getOperation()
            + getTextStyle()
            + getTime()
            {static} + jsonToContactsRaw()
            + setAccount()
            + setAvatar()
            + setNickname()
            + setOperation()
            + setTextStyle()
            + setTime()
        }
      }
    }
  }
  

  namespace com.chrisjaunes.communication.client {
    namespace contacts {
      namespace model {
        interface com.chrisjaunes.communication.client.contacts.model.ContactsRetrofit {
            {abstract} + addMessage()
            {abstract} + query()
            {abstract} + queryMessage()
            {abstract} + update()
        }
      }
    }
  }
  

  namespace com.chrisjaunes.communication.client {
    namespace contacts {
      namespace model {
        class com.chrisjaunes.communication.client.contacts.model.ContactsView {
            {static} + CONTACTS_DEFAULT : ContactsView
            - avatarView : Bitmap
            + ContactsView()
            + getAccount()
            + getAvatarView()
            + getChatTextStyleView()
            + getContactsRaw()
            + getNickName()
            + setContactsRaw()
        }
      }
    }
  }
  

  namespace com.chrisjaunes.communication.client {
    namespace contacts {
      namespace model {
        class com.chrisjaunes.communication.client.contacts.model.ContactsViewManage {
            - contactsViewHashMap : HashMap<String, ContactsView>
            {static} - instance : ContactsViewManage
            + getContactsRaw()
            + getContactsView()
            {static} + getInstance()
            + setContactsRaw()
            - ContactsViewManage()
        }
      }
    }
  }
  

  com.chrisjaunes.communication.client.contacts.model.ContactsView o-- com.chrisjaunes.communication.client.myView.ChatTextStyleView : chatTextStyleView
  com.chrisjaunes.communication.client.contacts.model.ContactsView o-- com.chrisjaunes.communication.client.contacts.model.ContactsRaw : contactsRaw
  com.chrisjaunes.communication.client.contacts.model.ContactsViewManage o-- com.chrisjaunes.communication.client.contacts.model.ContactsDao : contactsDao


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
